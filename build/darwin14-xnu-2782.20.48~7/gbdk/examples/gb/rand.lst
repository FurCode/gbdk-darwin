                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Sat Apr  4 17:10:57 2015
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc542340
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _accua
                             13 	.globl _accu
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; special function bits 
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; internal ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
   0000                      24 _accu::
   0000                      25 	.ds 80
   0050                      26 _accua::
   0050                      27 	.ds 80
                             28 ;--------------------------------------------------------
                             29 ; overlayable items in internal ram 
                             30 ;--------------------------------------------------------
                             31 	.area _OVERLAY
                             32 ;--------------------------------------------------------
                             33 ; indirectly addressable internal ram data
                             34 ;--------------------------------------------------------
                             35 	.area _ISEG
                             36 ;--------------------------------------------------------
                             37 ; bit data
                             38 ;--------------------------------------------------------
                             39 	.area _BSEG
                             40 ;--------------------------------------------------------
                             41 ; external ram data
                             42 ;--------------------------------------------------------
                             43 	.area _XSEG
                             44 ;--------------------------------------------------------
                             45 ; global & static initialisations
                             46 ;--------------------------------------------------------
                             47 	.area _GSINIT
                             48 	.area _GSFINAL
                             49 	.area _GSINIT
                             50 ;--------------------------------------------------------
                             51 ; Home
                             52 ;--------------------------------------------------------
                             53 	.area _HOME
                             54 	.area _CODE
                             55 ;--------------------------------------------------------
                             56 ; code
                             57 ;--------------------------------------------------------
                             58 	.area _CODE
                             59 ;	rand.c 21
                             60 ;	genLabel
                             61 ;	genFunction
                             62 ;	---------------------------------
                             63 ; Function main
                             64 ; ---------------------------------
   0000                      65 ___main_start:
   0000                      66 _main:
   0000 E8 F7                67 	lda	sp,-9(sp)
                             68 ;	rand.c 23
                             69 ;	genAssign
                             70 ;	AOP_STK for _main_t_1_1
   0002 F8 07                71 	lda	hl,7(sp)
   0004 36 00                72 	ld	(hl),#0x00
                             73 ;	genAssign
                             74 ;	AOP_STK for _main_u_1_1
   0006 2B                   75 	dec	hl
   0007 36 00                76 	ld	(hl),#0x00
                             77 ;	rand.c 27
                             78 ;	genIpush
                             79 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0009 21 FC 00             80 	ld	hl,#__str_0
   000C E5                   81 	push	hl
                             82 ;	genCall
   000D CD 00 00             83 	call	_puts
   0010 E8 02                84 	lda	sp,2(sp)
                             85 ;	rand.c 28
                             86 ;	genIpush
                             87 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0012 21 09 01             88 	ld	hl,#__str_1
   0015 E5                   89 	push	hl
                             90 ;	genCall
   0016 CD 00 00             91 	call	_puts
   0019 E8 02                92 	lda	sp,2(sp)
                             93 ;	rand.c 29
                             94 ;	genIpush
                             95 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   001B 3E FF                96 	ld	a,#0xFF
   001D F5                   97 	push	af
   001E 33                   98 	inc	sp
                             99 ;	genCall
   001F CD 00 00            100 	call	_waitpad
   0022 E8 01               101 	lda	sp,1(sp)
                            102 ;	rand.c 30
                            103 ;	genCall
                            104 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0024 CD 00 00            105 	call	_waitpadup
                            106 ;	rand.c 31
                            107 ;	genAssign
   0027 06 04               108 	ld	b,#0x04
   0029 0E FF               109 	ld	c,#0xFF
                            110 ;	genPointerGet
   002B 58                  111 	ld	e,b
   002C 51                  112 	ld	d,c
   002D 1A                  113 	ld	a,(de)
   002E 47                  114 	ld	b,a
                            115 ;	genCast
                            116 ;	AOP_STK for _main_seed_1_1
   002F F8 04               117 	lda	hl,4(sp)
   0031 70                  118 	ld	(hl),b
   0032 23                  119 	inc	hl
   0033 36 00               120 	ld	(hl),#0x00
                            121 ;	rand.c 32
                            122 ;	genIpush
                            123 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0035 21 1A 01            124 	ld	hl,#__str_2
   0038 E5                  125 	push	hl
                            126 ;	genCall
   0039 CD 00 00            127 	call	_puts
   003C E8 02               128 	lda	sp,2(sp)
                            129 ;	rand.c 33
                            130 ;	genIpush
                            131 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   003E 3E FF               132 	ld	a,#0xFF
   0040 F5                  133 	push	af
   0041 33                  134 	inc	sp
                            135 ;	genCall
   0042 CD 00 00            136 	call	_waitpad
   0045 E8 01               137 	lda	sp,1(sp)
                            138 ;	rand.c 34
                            139 ;	genCall
                            140 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0047 CD 00 00            141 	call	_waitpadup
                            142 ;	rand.c 35
                            143 ;	genAssign
   004A 01 04 FF            144 	ld	bc,#0xFF04
                            145 ;	genPointerGet
   004D 0A                  146 	ld	a,(bc)
   004E 4F                  147 	ld	c,a
                            148 ;	genCast
                            149 ; Removed redundent load
   004F 06 00               150 	ld	b,#0x00
                            151 ;	genLeftShift
   0051 41                  152 	ld	b,c
   0052 0E 00               153 	ld	c,#0x00
                            154 ;	genOr
                            155 ;	AOP_STK for _main_seed_1_1
   0054 F8 04               156 	lda	hl,4(sp)
   0056 7E                  157 	ld	a,(hl)
   0057 B1                  158 	or	a,c
   0058 22                  159 	ld	(hl+),a
   0059 7E                  160 	ld	a,(hl)
   005A B0                  161 	or	a,b
                            162 ;	rand.c 38
                            163 ;	genIpush
                            164 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            165 ;	AOP_STK for _main_seed_1_1
   005B 32                  166 	ld      (hl-),a
   005C 2A                  167 	ld	a,(hl+)
   005D 66                  168 	ld	h,(hl)
   005E 6F                  169 	ld	l,a
   005F E5                  170 	push	hl
                            171 ;	genCall
   0060 CD 00 00            172 	call	_initarand
   0063 E8 02               173 	lda	sp,2(sp)
                            174 ;	rand.c 40
                            175 ;	genLabel
   0065                     176 00106$:
                            177 ;	rand.c 41
                            178 ;	genCall
                            179 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0065 CD 00 00            180 	call	_rand
   0068 4B                  181 	ld	c,e
                            182 ;	genAssign
                            183 ;	(registers are the same)
                            184 ;	rand.c 42
                            185 ;	genCall
                            186 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0069 C5                  187 	push	bc
   006A CD 00 00            188 	call	_arand
   006D 43                  189 	ld	b,e
   006E E1                  190 	pop	hl
   006F 4D                  191 	ld	c,l
                            192 ;	genAssign
                            193 ;	AOP_STK for _main_s_1_1
   0070 F8 08               194 	lda	hl,8(sp)
   0072 70                  195 	ld	(hl),b
                            196 ;	rand.c 44
                            197 ;	genCmpLt
   0073 79                  198 	ld	a,c
   0074 FE 50               199 	cp	#0x50
   0076 D2 A6 00            200 	jp	nc,00102$
                            201 ;	rand.c 45
                            202 ;	genPlus
                            203 ;	AOP_STK for _main_sloc0_1_0
                            204 ;	Can't optimise plus by inc, falling back to the normal way
   0079 11 00 00            205 	ld	de,#_accu
   007C 69                  206 	ld	l,c
   007D 26 00               207 	ld	h,#0x00
   007F 19                  208 	add	hl,de
   0080 7D                  209 	ld	a,l
   0081 54                  210 	ld	d,h
   0082 F8 02               211 	lda	hl,2(sp)
                            212 ;	genPointerGet
                            213 ;	AOP_STK for _main_sloc0_1_0
   0084 22                  214 	ld	(hl+),a
   0085 72                  215 	ld	(hl),d
   0086 5F                  216 	ld	e,a
   0087 1A                  217 	ld	a,(de)
   0088 47                  218 	ld	b,a
                            219 ;	genPlus
                            220 ;	genPlusIncr
                            221 ; Removed redundent load
   0089 04                  222 	inc	b
                            223 ;	genAssign (pointer)
                            224 ;	AOP_STK for _main_sloc0_1_0
   008A 2B                  225 	dec	hl
   008B 5E                  226 	ld	e,(hl)
   008C 23                  227 	inc	hl
   008D 56                  228 	ld	d,(hl)
   008E 78                  229 	ld	a,b
   008F 12                  230 	ld	(de),a
                            231 ;	genAssign
                            232 ;	AOP_STK for _main_t_1_1
   0090 F8 07               233 	lda	hl,7(sp)
   0092 70                  234 	ld	(hl),b
                            235 ;	rand.c 46
                            236 ;	genMinus
                            237 ;	AOP_STK for _main_t_1_1
   0093 3E 90               238 	ld	a,#0x90
   0095 96                  239 	sub	a,(hl)
   0096 47                  240 	ld	b,a
                            241 ;	genIpush
                            242 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0097 21 01 00            243 	ld	hl,#0x0001
   009A E5                  244 	push	hl
                            245 ;	genIpush
   009B 78                  246 	ld	a,b
   009C F5                  247 	push	af
   009D 33                  248 	inc	sp
                            249 ;	genIpush
   009E 79                  250 	ld	a,c
   009F F5                  251 	push	af
   00A0 33                  252 	inc	sp
                            253 ;	genCall
   00A1 CD 00 00            254 	call	_plot
   00A4 E8 04               255 	lda	sp,4(sp)
                            256 ;	genLabel
   00A6                     257 00102$:
                            258 ;	rand.c 48
                            259 ;	genCmpLt
                            260 ;	AOP_STK for _main_s_1_1
   00A6 F8 08               261 	lda	hl,8(sp)
   00A8 7E                  262 	ld	a,(hl)
   00A9 FE 50               263 	cp	#0x50
   00AB D2 E4 00            264 	jp	nc,00107$
                            265 ;	rand.c 49
                            266 ;	genPlus
                            267 ;	AOP_STK for _main_s_1_1
                            268 ;	AOP_STK for _main_sloc1_1_0
                            269 ;	Can't optimise plus by inc, falling back to the normal way
   00AE 11 50 00            270 	ld	de,#_accua
   00B1 6E                  271 	ld	l,(hl)
   00B2 26 00               272 	ld	h,#0x00
   00B4 19                  273 	add	hl,de
   00B5 7D                  274 	ld	a,l
   00B6 54                  275 	ld	d,h
   00B7 F8 00               276 	lda	hl,0(sp)
                            277 ;	genPointerGet
                            278 ;	AOP_STK for _main_sloc1_1_0
                            279 ;	AOP_STK for _main_sloc0_1_0
   00B9 22                  280 	ld	(hl+),a
   00BA 72                  281 	ld	(hl),d
   00BB 5F                  282 	ld	e,a
   00BC 1A                  283 	ld	a,(de)
   00BD 23                  284 	inc	hl
                            285 ;	genPlus
                            286 ;	AOP_STK for _main_sloc0_1_0
                            287 ;	genPlusIncr
   00BE 77                  288 	ld      (hl),a
   00BF 4F                  289 	ld      c,a
   00C0 0C                  290 	inc	c
                            291 ;	genAssign (pointer)
                            292 ;	AOP_STK for _main_sloc1_1_0
   00C1 2B                  293 	dec	hl
   00C2 2B                  294 	dec	hl
   00C3 5E                  295 	ld	e,(hl)
   00C4 23                  296 	inc	hl
   00C5 56                  297 	ld	d,(hl)
   00C6 79                  298 	ld	a,c
   00C7 12                  299 	ld	(de),a
                            300 ;	genAssign
                            301 ;	AOP_STK for _main_u_1_1
   00C8 F8 06               302 	lda	hl,6(sp)
   00CA 71                  303 	ld	(hl),c
                            304 ;	rand.c 50
                            305 ;	genMinus
                            306 ;	AOP_STK for _main_u_1_1
   00CB 3E 90               307 	ld	a,#0x90
   00CD 96                  308 	sub	a,(hl)
   00CE 4F                  309 	ld	c,a
                            310 ;	genPlus
                            311 ;	AOP_STK for _main_s_1_1
                            312 ;	genPlusIncr
                            313 ;	Can't optimise plus by inc, falling back to the normal way
   00CF 23                  314 	inc	hl
   00D0 23                  315 	inc	hl
   00D1 7E                  316 	ld	a,(hl)
   00D2 C6 50               317 	add	a,#0x50
   00D4 47                  318 	ld	b,a
                            319 ;	genIpush
                            320 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00D5 21 02 00            321 	ld	hl,#0x0002
   00D8 E5                  322 	push	hl
                            323 ;	genIpush
   00D9 79                  324 	ld	a,c
   00DA F5                  325 	push	af
   00DB 33                  326 	inc	sp
                            327 ;	genIpush
   00DC 78                  328 	ld	a,b
   00DD F5                  329 	push	af
   00DE 33                  330 	inc	sp
                            331 ;	genCall
   00DF CD 00 00            332 	call	_plot
   00E2 E8 04               333 	lda	sp,4(sp)
                            334 ;	genLabel
   00E4                     335 00107$:
                            336 ;	rand.c 53
                            337 ;	genCmpEq
                            338 ;	AOP_STK for _main_t_1_1
                            339 ; genCmpEq: left 1, right 1, result 0
   00E4 F8 07               340 	lda	hl,7(sp)
   00E6 7E                  341 	ld	a,(hl)
   00E7 FE 90               342 	cp	a,#0x90
   00E9 CA F9 00            343 	jp	z,00109$
   00EC                     344 00115$:
                            345 ;	genCmpEq
                            346 ;	AOP_STK for _main_u_1_1
                            347 ; genCmpEq: left 1, right 1, result 0
   00EC F8 06               348 	lda	hl,6(sp)
   00EE 7E                  349 	ld	a,(hl)
   00EF FE 90               350 	cp	a,#0x90
   00F1 C2 65 00            351 	jp	nz,00106$
   00F4 18 03               352 	jr	00117$
   00F6                     353 00116$:
   00F6 C3 65 00            354 	jp	00106$
   00F9                     355 00117$:
                            356 ;	genLabel
   00F9                     357 00109$:
                            358 ;	genEndFunction
   00F9 E8 09               359 	lda	sp,9(sp)
   00FB C9                  360 	ret
   00FC                     361 ___main_end:
   00FC                     362 __str_0:
   00FC 47 65 74 74 69 6E   363 	.ascii "Getting seed"
        67 20 73 65 65 64
   0108 00                  364 	.db 0x00
   0109                     365 __str_1:
   0109 50 75 73 68 20 61   366 	.ascii "Push any key (1)"
        6E 79 20 6B 65 79
        20 28 31 29
   0119 00                  367 	.db 0x00
   011A                     368 __str_2:
   011A 50 75 73 68 20 61   369 	.ascii "Push any key (2)"
        6E 79 20 6B 65 79
        20 28 32 29
   012A 00                  370 	.db 0x00
                            371 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 ___main_end                        00FC R
  0 ___main_start                      0000 R
  0 __str_0                            00FC R
  0 __str_1                            0109 R
  0 __str_2                            011A R
  1 _accu                              0000 GR
  1 _accua                             0050 GR
    _arand                             **** GX
    _initarand                         **** GX
  0 _main                              0000 GR
    _plot                              **** GX
    _puts                              **** GX
    _rand                              **** GX
    _waitpad                           **** GX
    _waitpadup                         **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  12B   flags 0
   1 _DATA                              size   A0   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size    0   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
