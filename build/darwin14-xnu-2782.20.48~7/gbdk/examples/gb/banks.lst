                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Sat Apr  4 17:11:00 2015
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc542760
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _print_var
                             13 	.globl _bank_fixed
                             14 	.globl _var_internal
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; special function bits 
                             20 ;--------------------------------------------------------
                             21 ;--------------------------------------------------------
                             22 ; internal ram data
                             23 ;--------------------------------------------------------
                             24 	.area _DATA
   0000                      25 _var_internal::
   0000                      26 	.ds 2
                             27 ;--------------------------------------------------------
                             28 ; overlayable items in internal ram 
                             29 ;--------------------------------------------------------
                             30 	.area _OVERLAY
                             31 ;--------------------------------------------------------
                             32 ; indirectly addressable internal ram data
                             33 ;--------------------------------------------------------
                             34 	.area _ISEG
                             35 ;--------------------------------------------------------
                             36 ; bit data
                             37 ;--------------------------------------------------------
                             38 	.area _BSEG
                             39 ;--------------------------------------------------------
                             40 ; external ram data
                             41 ;--------------------------------------------------------
                             42 	.area _XSEG
                             43 ;--------------------------------------------------------
                             44 ; global & static initialisations
                             45 ;--------------------------------------------------------
                             46 	.area _GSINIT
                             47 	.area _GSFINAL
                             48 	.area _GSINIT
                             49 ;--------------------------------------------------------
                             50 ; Home
                             51 ;--------------------------------------------------------
                             52 	.area _HOME
                             53 ;	banks.c 17
                             54 ;	genLabel
                             55 ;	genFunction
                             56 ;	---------------------------------
                             57 ; Function bank_fixed
                             58 ; ---------------------------------
   0000                      59 ___bank_fixed_start:
   0000                      60 _bank_fixed:
                             61 	
                             62 ;	banks.c 19
                             63 ;	genIpush
                             64 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 0A 00             65 	ld	hl,#__str_0
   0003 E5                   66 	push	hl
                             67 ;	genCall
   0004 CD 00 00             68 	call	_puts
   0007 E8 02                69 	lda	sp,2(sp)
                             70 ;	genLabel
   0009                      71 00101$:
                             72 ;	genEndFunction
                             73 	
   0009 C9                   74 	ret
   000A                      75 ___bank_fixed_end:
   000A                      76 __str_0:
   000A 49 27 6D 20 69 6E    77 	.ascii "I'm in fixed ROM"
        20 66 69 78 65 64
        20 52 4F 4D
   001A 00                   78 	.db 0x00
                             79 	.area _CODE
                             80 ;--------------------------------------------------------
                             81 ; code
                             82 ;--------------------------------------------------------
                             83 	.area _CODE
                             84 ;	banks.c 22
                             85 ;	genLabel
                             86 ;	genFunction
                             87 ;	---------------------------------
                             88 ; Function print_var
                             89 ; ---------------------------------
   0000                      90 ___print_var_start:
   0000                      91 _print_var:
                             92 	
                             93 ;	banks.c 24
                             94 ;	genAssign
   0000 01 00 40             95 	ld	bc,#0x4000
                             96 ;	genAssign (pointer)
                             97 ;	AOP_STK for 
   0003 F8 02                98 	lda	hl,2(sp)
   0005 7E                   99 	ld	a,(hl)
   0006 02                  100 	ld	(bc),a
                            101 ;	banks.c 25
                            102 ;	genIpush
                            103 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0007 21 11 00            104 	ld	hl,#__str_1
   000A E5                  105 	push	hl
                            106 ;	genCall
   000B CD 00 00            107 	call	_printf
   000E E8 02               108 	lda	sp,2(sp)
                            109 ;	genLabel
   0010                     110 00101$:
                            111 ;	genEndFunction
                            112 	
   0010 C9                  113 	ret
   0011                     114 ___print_var_end:
   0011                     115 __str_1:
   0011 56 61 72 5F 25 75   116 	.ascii "Var_%u is %u"
        20 69 73 20 25 75
   001D 0A                  117 	.db 0x0A
   001E 00                  118 	.db 0x00
                            119 ;	banks.c 28
                            120 ;	genLabel
                            121 ;	genFunction
                            122 ;	---------------------------------
                            123 ; Function main
                            124 ; ---------------------------------
   001F                     125 ___main_start:
   001F                     126 _main:
                            127 	
                            128 ;	banks.c 30
                            129 ;	genIpush
                            130 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   001F 21 04 01            131 	ld	hl,#__str_2
   0022 E5                  132 	push	hl
                            133 ;	genCall
   0023 CD 00 00            134 	call	_puts
   0026 E8 02               135 	lda	sp,2(sp)
                            136 ;	banks.c 32
                            137 ;	genAssign
   0028 01 00 00            138 	ld	bc,#0x0000
                            139 ;	genAssign (pointer)
   002B 3E 0A               140 	ld	a,#0x0A
   002D 02                  141 	ld	(bc),a
                            142 ;	banks.c 33
                            143 ;	genAssign
   002E 01 00 60            144 	ld	bc,#0x6000
                            145 ;	genAssign (pointer)
   0031 3E 01               146 	ld	a,#0x01
   0033 02                  147 	ld	(bc),a
                            148 ;	banks.c 35
                            149 ;	genAssign
                            150 ;	AOP_HL for _var_internal
   0034 21 00 00            151 	ld	hl,#_var_internal
   0037 36 01               152 	ld	(hl),#0x01
   0039 23                  153 	inc	hl
   003A 36 00               154 	ld	(hl),#0x00
                            155 ;	banks.c 36
                            156 ;	genAssign
   003C 01 00 40            157 	ld	bc,#0x4000
                            158 ;	genAssign (pointer)
   003F 3E 00               159 	ld	a,#0x00
   0041 02                  160 	ld	(bc),a
                            161 ;	banks.c 37
                            162 ;	genAssign
                            163 ;	AOP_HL for _var_0
   0042 21 00 00            164 	ld	hl,#_var_0
   0045 36 02               165 	ld	(hl),#0x02
   0047 23                  166 	inc	hl
   0048 36 00               167 	ld	(hl),#0x00
                            168 ;	banks.c 38
                            169 ;	genAssign
   004A 01 00 40            170 	ld	bc,#0x4000
                            171 ;	genAssign (pointer)
   004D 3E 01               172 	ld	a,#0x01
   004F 02                  173 	ld	(bc),a
                            174 ;	banks.c 39
                            175 ;	genAssign
                            176 ;	AOP_HL for _var_1
   0050 21 00 00            177 	ld	hl,#_var_1
   0053 36 03               178 	ld	(hl),#0x03
   0055 23                  179 	inc	hl
   0056 36 00               180 	ld	(hl),#0x00
                            181 ;	banks.c 40
                            182 ;	genAssign
   0058 01 00 40            183 	ld	bc,#0x4000
                            184 ;	genAssign (pointer)
   005B 3E 02               185 	ld	a,#0x02
   005D 02                  186 	ld	(bc),a
                            187 ;	banks.c 41
                            188 ;	genAssign
                            189 ;	AOP_HL for _var_2
   005E 21 00 00            190 	ld	hl,#_var_2
   0061 36 04               191 	ld	(hl),#0x04
   0063 23                  192 	inc	hl
   0064 36 00               193 	ld	(hl),#0x00
                            194 ;	banks.c 42
                            195 ;	genAssign
   0066 01 00 40            196 	ld	bc,#0x4000
                            197 ;	genAssign (pointer)
   0069 3E 03               198 	ld	a,#0x03
   006B 02                  199 	ld	(bc),a
                            200 ;	banks.c 43
                            201 ;	genAssign
                            202 ;	AOP_HL for _var_3
   006C 21 00 00            203 	ld	hl,#_var_3
   006F 36 05               204 	ld	(hl),#0x05
   0071 23                  205 	inc	hl
   0072 36 00               206 	ld	(hl),#0x00
                            207 ;	banks.c 45
                            208 ;	genCall
                            209 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0074 CD 00 00            210 	call	_bank_fixed
                            211 ;	banks.c 46
                            212 ;	genAssign
   0077 01 00 20            213 	ld	bc,#0x2000
                            214 ;	genAssign (pointer)
   007A 3E 01               215 	ld	a,#0x01
   007C 02                  216 	ld	(bc),a
                            217 ;	banks.c 47
                            218 ;	genCall
                            219 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   007D CD 00 00            220 	call	_bank_1
                            221 ;	banks.c 48
                            222 ;	genAssign
   0080 01 00 20            223 	ld	bc,#0x2000
                            224 ;	genAssign (pointer)
   0083 3E 02               225 	ld	a,#0x02
   0085 02                  226 	ld	(bc),a
                            227 ;	banks.c 49
                            228 ;	genCall
                            229 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0086 CD 00 00            230 	call	_bank_2
                            231 ;	banks.c 50
                            232 ;	genAssign
   0089 01 00 20            233 	ld	bc,#0x2000
                            234 ;	genAssign (pointer)
   008C 3E 03               235 	ld	a,#0x03
   008E 02                  236 	ld	(bc),a
                            237 ;	banks.c 51
                            238 ;	genCall
                            239 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   008F CD 00 00            240 	call	_bank_3
                            241 ;	banks.c 53
                            242 ;	genIpush
                            243 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            244 ;	AOP_HL for _var_internal
   0092 21 00 00            245 	ld	hl,#_var_internal
   0095 2A                  246 	ld	a,(hl+)
   0096 66                  247 	ld	h,(hl)
   0097 6F                  248 	ld	l,a
   0098 E5                  249 	push	hl
                            250 ;	genIpush
   0099 21 15 01            251 	ld	hl,#__str_3
   009C E5                  252 	push	hl
                            253 ;	genCall
   009D CD 00 00            254 	call	_printf
   00A0 E8 04               255 	lda	sp,4(sp)
                            256 ;	banks.c 54
                            257 ;	genAssign
   00A2 01 00 40            258 	ld	bc,#0x4000
                            259 ;	genAssign (pointer)
   00A5 3E 00               260 	ld	a,#0x00
   00A7 02                  261 	ld	(bc),a
                            262 ;	banks.c 55
                            263 ;	genIpush
                            264 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            265 ;	AOP_HL for _var_0
   00A8 21 00 00            266 	ld	hl,#_var_0
   00AB 2A                  267 	ld	a,(hl+)
   00AC 66                  268 	ld	h,(hl)
   00AD 6F                  269 	ld	l,a
   00AE E5                  270 	push	hl
                            271 ;	genIpush
   00AF 21 20 01            272 	ld	hl,#__str_4
   00B2 E5                  273 	push	hl
                            274 ;	genCall
   00B3 CD 00 00            275 	call	_printf
   00B6 E8 04               276 	lda	sp,4(sp)
                            277 ;	banks.c 56
                            278 ;	genAssign
   00B8 01 00 40            279 	ld	bc,#0x4000
                            280 ;	genAssign (pointer)
   00BB 3E 01               281 	ld	a,#0x01
   00BD 02                  282 	ld	(bc),a
                            283 ;	banks.c 57
                            284 ;	genIpush
                            285 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            286 ;	AOP_HL for _var_1
   00BE 21 00 00            287 	ld	hl,#_var_1
   00C1 2A                  288 	ld	a,(hl+)
   00C2 66                  289 	ld	h,(hl)
   00C3 6F                  290 	ld	l,a
   00C4 E5                  291 	push	hl
                            292 ;	genIpush
   00C5 21 2D 01            293 	ld	hl,#__str_5
   00C8 E5                  294 	push	hl
                            295 ;	genCall
   00C9 CD 00 00            296 	call	_printf
   00CC E8 04               297 	lda	sp,4(sp)
                            298 ;	banks.c 58
                            299 ;	genAssign
   00CE 01 00 40            300 	ld	bc,#0x4000
                            301 ;	genAssign (pointer)
   00D1 3E 02               302 	ld	a,#0x02
   00D3 02                  303 	ld	(bc),a
                            304 ;	banks.c 59
                            305 ;	genIpush
                            306 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            307 ;	AOP_HL for _var_2
   00D4 21 00 00            308 	ld	hl,#_var_2
   00D7 2A                  309 	ld	a,(hl+)
   00D8 66                  310 	ld	h,(hl)
   00D9 6F                  311 	ld	l,a
   00DA E5                  312 	push	hl
                            313 ;	genIpush
   00DB 21 3A 01            314 	ld	hl,#__str_6
   00DE E5                  315 	push	hl
                            316 ;	genCall
   00DF CD 00 00            317 	call	_printf
   00E2 E8 04               318 	lda	sp,4(sp)
                            319 ;	banks.c 60
                            320 ;	genAssign
   00E4 01 00 40            321 	ld	bc,#0x4000
                            322 ;	genAssign (pointer)
   00E7 3E 03               323 	ld	a,#0x03
   00E9 02                  324 	ld	(bc),a
                            325 ;	banks.c 61
                            326 ;	genIpush
                            327 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            328 ;	AOP_HL for _var_3
   00EA 21 00 00            329 	ld	hl,#_var_3
   00ED 2A                  330 	ld	a,(hl+)
   00EE 66                  331 	ld	h,(hl)
   00EF 6F                  332 	ld	l,a
   00F0 E5                  333 	push	hl
                            334 ;	genIpush
   00F1 21 47 01            335 	ld	hl,#__str_7
   00F4 E5                  336 	push	hl
                            337 ;	genCall
   00F5 CD 00 00            338 	call	_printf
   00F8 E8 04               339 	lda	sp,4(sp)
                            340 ;	banks.c 63
                            341 ;	genIpush
                            342 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00FA 21 54 01            343 	ld	hl,#__str_8
   00FD E5                  344 	push	hl
                            345 ;	genCall
   00FE CD 00 00            346 	call	_puts
   0101 E8 02               347 	lda	sp,2(sp)
                            348 ;	genLabel
   0103                     349 00101$:
                            350 ;	genEndFunction
                            351 	
   0103 C9                  352 	ret
   0104                     353 ___main_end:
   0104                     354 __str_2:
   0104 50 72 6F 67 72 61   355 	.ascii "Program Start..."
        6D 20 53 74 61 72
        74 2E 2E 2E
   0114 00                  356 	.db 0x00
   0115                     357 __str_3:
   0115 56 61 72 20 69 73   358 	.ascii "Var is %u"
        20 25 75
   011E 0A                  359 	.db 0x0A
   011F 00                  360 	.db 0x00
   0120                     361 __str_4:
   0120 56 61 72 5F 30 20   362 	.ascii "Var_0 is %u"
        69 73 20 25 75
   012B 0A                  363 	.db 0x0A
   012C 00                  364 	.db 0x00
   012D                     365 __str_5:
   012D 56 61 72 5F 31 20   366 	.ascii "Var_1 is %u"
        69 73 20 25 75
   0138 0A                  367 	.db 0x0A
   0139 00                  368 	.db 0x00
   013A                     369 __str_6:
   013A 56 61 72 5F 32 20   370 	.ascii "Var_2 is %u"
        69 73 20 25 75
   0145 0A                  371 	.db 0x0A
   0146 00                  372 	.db 0x00
   0147                     373 __str_7:
   0147 56 61 72 5F 33 20   374 	.ascii "Var_3 is %u"
        69 73 20 25 75
   0152 0A                  375 	.db 0x0A
   0153 00                  376 	.db 0x00
   0154                     377 __str_8:
   0154 54 68 65 20 45 6E   378 	.ascii "The End..."
        64 2E 2E 2E
   015E 00                  379 	.db 0x00
                            380 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  8 ___bank_fixed_end                  000A R
  8 ___bank_fixed_start                0000 R
  0 ___main_end                        0104 R
  0 ___main_start                      001F R
  0 ___print_var_end                   0011 R
  0 ___print_var_start                 0000 R
  8 __str_0                            000A R
  0 __str_1                            0011 R
  0 __str_2                            0104 R
  0 __str_3                            0115 R
  0 __str_4                            0120 R
  0 __str_5                            012D R
  0 __str_6                            013A R
  0 __str_7                            0147 R
  0 __str_8                            0154 R
    _bank_1                            **** GX
    _bank_2                            **** GX
    _bank_3                            **** GX
  8 _bank_fixed                        0000 GR
  0 _main                              001F GR
  0 _print_var                         0000 GR
    _printf                            **** GX
    _puts                              **** GX
    _var_0                             **** GX
    _var_1                             **** GX
    _var_2                             **** GX
    _var_3                             **** GX
  1 _var_internal                      0000 GR

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  15F   flags 0
   1 _DATA                              size    2   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size    0   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size   1B   flags 0
